cmake_minimum_required(VERSION 3.2)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_CXX_STANDARD 11)

project(OpenGL-Fractals)

add_executable(basics basics.cpp)
add_executable(Board Board.cpp)
add_executable(CircleRecursion CircleRecursion.cpp)
add_executable(Crystal Crystal.cpp)
add_executable(DragonCurve DragonCurve.cpp)
add_executable(Tree Tree.cpp)
add_executable(KochSnowflake KochSnowflake.cpp)
add_executable(Shrub Shrub.cpp)
add_executable(SierpinskiTriangle SierpinskiTriangle.cpp)
add_executable(HexFractal HexFractal.cpp)
add_executable(Pentaplexity Pentaplexity.cpp)
add_executable(Rings Rings.cpp)

find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)
include_directories( ${OPENGL_INCLUDE_DIRS})
target_link_libraries(basics ${OPENGL_LIBRARIES} glfw)
target_link_libraries(Board ${OPENGL_LIBRARIES} glfw)
target_link_libraries(CircleRecursion ${OPENGL_LIBRARIES} glfw)
target_link_libraries(Crystal ${OPENGL_LIBRARIES} glfw)
target_link_libraries(DragonCurve ${OPENGL_LIBRARIES} glfw)
target_link_libraries(Tree ${OPENGL_LIBRARIES} glfw)
target_link_libraries(KochSnowflake ${OPENGL_LIBRARIES} glfw)
target_link_libraries(Shrub ${OPENGL_LIBRARIES} glfw)
target_link_libraries(SierpinskiTriangle ${OPENGL_LIBRARIES} glfw)
target_link_libraries(HexFractal ${OPENGL_LIBRARIES} glfw)
target_link_libraries(Pentaplexity ${OPENGL_LIBRARIES} glfw)
target_link_libraries(Rings ${OPENGL_LIBRARIES} glfw)
